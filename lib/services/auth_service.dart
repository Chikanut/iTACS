// auth_service.dart

import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:shared_preferences/shared_preferences.dart';

import '../globals.dart';

class AuthService {
  static GoogleSignInAccount? currentGoogleUser;
  static String? _cachedAccessToken;
  static DateTime? _tokenExpirationTime;

  // –î–æ–¥–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ scopes –¥–ª—è Google Drive
  static final GoogleSignIn _googleSignInWithDrive = GoogleSignIn(
    scopes: [
      'email',
      'https://www.googleapis.com/auth/drive.readonly',
    ],
  );

  static Future signInWithGoogle(BuildContext context) async {
    try {
      final GoogleSignInAccount? googleUser = await _googleSignInWithDrive.signIn();
      if (googleUser == null) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(content: Text('‚ùå –í—Ö—ñ–¥ —Å–∫–∞—Å–æ–≤–∞–Ω–æ')),
        );
        return;
      }

      currentGoogleUser = googleUser;
      
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥
      await _saveSignInState(true);
      
      final googleAuth = await googleUser.authentication;

      // –ö–µ—à—É—î–º–æ —Ç–æ–∫–µ–Ω —Ç–∞ —á–∞—Å –π–æ–≥–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è
      _cachedAccessToken = googleAuth.accessToken;
      _tokenExpirationTime = DateTime.now().add(Duration(hours: 1)); // Google —Ç–æ–∫–µ–Ω–∏ –∂–∏–≤—É—Ç—å –±–ª–∏–∑—å–∫–æ –≥–æ–¥–∏–Ω–∏

      final credential = GoogleAuthProvider.credential(
        accessToken: googleAuth.accessToken,
        idToken: googleAuth.idToken,
      );

      final userCredential =
          await Globals.firebaseAuth.signInWithCredential(credential);

      final email = userCredential.user?.email ?? '–Ω–µ–≤—ñ–¥–æ–º–æ';
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('‚úÖ –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ $email')),
      );
    } catch (e) {
      debugPrint('üö´ –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('üö´ –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: $e')),
      );
    }
  }

  /// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –¥–æ–¥–∞—Ç–∫–∞
  static Future<void> initializeAuth() async {
    try {
      final prefs = await SharedPreferences.getInstance();
      final wasSignedIn = prefs.getBool('google_signed_in') ?? false;
      
      if (wasSignedIn) {
        // –°–ø—Ä–æ–±—É—î–º–æ —Ç–∏—Ö–æ —É–≤—ñ–π—Ç–∏
        final account = await _googleSignInWithDrive.signInSilently();
        if (account != null) {
          currentGoogleUser = account;
          debugPrint('‚úÖ –¢–∏—Ö–∏–π –≤—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π');
          
          // –û—Ç—Ä–∏–º—É—î–º–æ fresh —Ç–æ–∫–µ–Ω
          final auth = await account.authentication;
          _cachedAccessToken = auth.accessToken;
          _tokenExpirationTime = DateTime.now().add(Duration(hours: 1));
        } else {
          debugPrint('‚ö†Ô∏è –¢–∏—Ö–∏–π –≤—Ö—ñ–¥ –Ω–µ –≤–¥–∞–≤—Å—è, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î —É–≤—ñ–π—Ç–∏ –∑–Ω–æ–≤—É');
          await _saveSignInState(false);
        }
      }
    } catch (e) {
      debugPrint('üö´ –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: $e');
      await _saveSignInState(false);
    }
  }

  Future<String?> getAccessToken() async {
    try {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∑–∞–∫–µ—à–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω —ñ —á–∏ –Ω–µ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è
      if (_cachedAccessToken != null && 
          _tokenExpirationTime != null && 
          DateTime.now().isBefore(_tokenExpirationTime!)) {
        debugPrint('‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–∫–µ—à–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω');
        return _cachedAccessToken;
      }

      GoogleSignInAccount? account = _googleSignInWithDrive.currentUser;

      // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Å–ø—Ä–æ–±—É—î–º–æ —Ç–∏—Ö–∏–π –≤—Ö—ñ–¥
      if (account == null) {
        debugPrint('üîÑ –°–ø—Ä–æ–±–∞ —Ç–∏—Ö–æ–≥–æ –≤—Ö–æ–¥—É...');
        account = await _googleSignInWithDrive.signInSilently();
      }

      if (account == null) {
        debugPrint('üõë –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π');
        await _saveSignInState(false);
        return null;
      }

      // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω
      final auth = await account.authentication;

      if (auth.accessToken == null) {
        debugPrint('üõë AccessToken –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ. –°–ø—Ä–æ–±—É—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é...');
        
        // –°–ø—Ä–æ–±—É—î–º–æ –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–µ—à —ñ —É–≤—ñ–π—Ç–∏ –∑–Ω–æ–≤—É
        await _googleSignInWithDrive.signOut();
        account = await _googleSignInWithDrive.signIn();
        
        if (account == null) {
          await _saveSignInState(false);
          return null;
        }
        
        final newAuth = await account.authentication;
        _cachedAccessToken = newAuth.accessToken;
        _tokenExpirationTime = DateTime.now().add(Duration(hours: 1));
        
        return _cachedAccessToken;
      }

      // –ö–µ—à—É—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–∫–µ–Ω
      _cachedAccessToken = auth.accessToken;
      _tokenExpirationTime = DateTime.now().add(Duration(hours: 1));
      currentGoogleUser = account;

      debugPrint('‚úÖ AccessToken –æ—Ç—Ä–∏–º–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
      return _cachedAccessToken;
    } catch (e) {
      debugPrint('üö´ –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è AccessToken: $e');
      await _saveSignInState(false);
      return null;
    }
  }

  Future<bool> isUserAllowed(String email) async {
    return await Globals.firestoreManager.isUserAllowed(email);
  }

  /// –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω –≤—Ö–æ–¥—É
  static Future<void> _saveSignInState(bool isSignedIn) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setBool('google_signed_in', isSignedIn);
  }

  /// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–≤—ñ–π—à–æ–≤
  static Future<bool> isSignedIn() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getBool('google_signed_in') ?? false;
  }

  /// –î–æ–¥–∞—î–º–æ –º–µ—Ç–æ–¥ –¥–ª—è –≤–∏—Ö–æ–¥—É
  Future<void> signOut() async {
    try {
      await _googleSignInWithDrive.signOut();
      await Globals.firebaseAuth.signOut();
      await _saveSignInState(false);
      
      // –û—á–∏—â–∞—î–º–æ –∫–µ—à
      _cachedAccessToken = null;
      _tokenExpirationTime = null;
      currentGoogleUser = null;
    } catch (e) {
      debugPrint('üö´ –ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É: $e');
    }
  }

  /// –ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–ª—é—î–º–æ —Ç–æ–∫–µ–Ω
  Future<String?> forceRefreshToken() async {
    _cachedAccessToken = null;
    _tokenExpirationTime = null;
    return await getAccessToken();
  }
}