#!/usr/bin/env dart

import 'dart:io';

/// –ú–∞–π—Å—Ç–µ—Ä-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–≤–Ω–æ—ó –º—ñ–≥—Ä–∞—Ü—ñ—ó –ø—Ä–æ—î–∫—Ç—É
void main(List<String> args) async {
  print('üöÄ –ü–û–í–ù–ê –ú–Ü–ì–†–ê–¶–Ü–Ø FLUTTER –ü–†–û–Ñ–ö–¢–£');
  print('=' * 50);
  
  final interactive = !args.contains('--auto');
  final skipAnalysis = args.contains('--skip-analysis');
  final skipColors = args.contains('--skip-colors');
  final skipTexts = args.contains('--skip-texts');
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ git —Å—Ç–∞—Ç—É—Å
  if (!await _checkGitStatus()) {
    print('‚ùå –ó–∞—Ñ—ñ–∫—Å—É–π—Ç–µ –∑–º—ñ–Ω–∏ –≤ git –ø–µ—Ä–µ–¥ –º—ñ–≥—Ä–∞—Ü—ñ—î—é');
    return;
  }
  
  try {
    if (!skipAnalysis) {
      await _runAnalysis();
      if (interactive && !_confirmContinue('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø—ñ—Å–ª—è –∞–Ω–∞–ª—ñ–∑—É?')) return;
    }
    
    if (!skipColors) {
      await _migrateColors();
      if (interactive && !_confirmContinue('–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –∑ –º—ñ–≥—Ä–∞—Ü—ñ—î—é —Ç–µ–∫—Å—Ç—ñ–≤?')) return;
    }
    
    if (!skipTexts) {
      await _setupLocalization();
      await _migrateTexts();
    }
    
    await _runFinalChecks();
    _printSuccessMessage();
    
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –º—ñ–≥—Ä–∞—Ü—ñ—ó: $e');
    exit(1);
  }
}

Future<bool> _checkGitStatus() async {
  print('\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å—É...');
  
  final result = await Process.run('git', ['status', '--porcelain']);
  if (result.exitCode != 0) {
    print('‚ö†Ô∏è  Git –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é...');
    await Process.run('git', ['init']);
    await Process.run('git', ['add', '.']);
    await Process.run('git', ['commit', '-m', 'Initial commit before migration']);
    return true;
  }
  
  if (result.stdout.toString().trim().isNotEmpty) {
    print('‚ö†Ô∏è  –£ –≤–∞—Å —î –Ω–µ–∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω—ñ –∑–º—ñ–Ω–∏.');
    
    final commit = _confirmContinue('–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ commit?');
    if (commit) {
      await Process.run('git', ['add', '.']);
      await Process.run('git', ['commit', '-m', 'Pre-migration backup']);
      print('‚úÖ –ó–º—ñ–Ω–∏ –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω—ñ');
      return true;
    }
    return false;
  }
  
  print('‚úÖ Git —Å—Ç–∞—Ç—É—Å —á–∏—Å—Ç–∏–π');
  return true;
}

Future<void> _runAnalysis() async {
  print('\nüìä –ö–†–û–ö 1: –ê–Ω–∞–ª—ñ–∑ hardcoded –∑–Ω–∞—á–µ–Ω—å...');
  
  final result = await Process.run(
    'dart', 
    ['scripts/analyze_hardcoded.dart', '--file'],
  );
  
  if (result.exitCode == 0) {
    print('‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ó–≤—ñ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ analysis_report_*.txt');
  } else {
    print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É: ${result.stderr}');
  }
}

Future<void> _migrateColors() async {
  print('\nüé® –ö–†–û–ö 2: –ú—ñ–≥—Ä–∞—Ü—ñ—è –∫–æ–ª—å–æ—Ä—ñ–≤...');
  
  // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±–Ω–∏–π –ø—Ä–æ–≥–æ–Ω
  print('üîç –ü—Ä–æ–±–Ω–∏–π –ø—Ä–æ–≥–æ–Ω –º—ñ–≥—Ä–∞—Ü—ñ—ó –∫–æ–ª—å–æ—Ä—ñ–≤...');
  var result = await Process.run(
    'dart', 
    ['scripts/migrate_colors.dart', '--dry-run'],
  );
  
  if (result.exitCode != 0) {
    throw '–ü–æ–º–∏–ª–∫–∞ dry-run –º—ñ–≥—Ä–∞—Ü—ñ—ó –∫–æ–ª—å–æ—Ä—ñ–≤: ${result.stderr}';
  }
  
  print(result.stdout);
  
  if (!_confirmContinue('–í–∏–∫–æ–Ω–∞—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é –∫–æ–ª—å–æ—Ä—ñ–≤?')) return;
  
  // –í–∏–∫–æ–Ω—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—é
  result = await Process.run('dart', ['scripts/migrate_colors.dart']);
  
  if (result.exitCode == 0) {
    print('‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è –∫–æ–ª—å–æ—Ä—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    print(result.stdout);
  } else {
    throw '–ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó –∫–æ–ª—å–æ—Ä—ñ–≤: ${result.stderr}';
  }
}

Future<void> _setupLocalization() async {
  print('\nüåç –ö–†–û–ö 3: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó...');
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ l10n —Ñ–∞–π–ª–∏
  final result = await Process.run(
    'dart', 
    ['scripts/generate_l10n_files.dart', '--from-analysis'],
  );
  
  if (result.exitCode == 0) {
    print('‚úÖ L10n —Ñ–∞–π–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ');
    print(result.stdout);
  } else {
    print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è l10n: ${result.stderr}');
  }
  
  // –î–æ–¥–∞—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
  print('üì¶ –î–æ–¥–∞—é flutter_localizations...');
  await Process.run('flutter', ['pub', 'add', 'flutter_localizations']);
  await Process.run('flutter', ['pub', 'get']);
}

Future<void> _migrateTexts() async {
  print('\nüìù –ö–†–û–ö 4: –ú—ñ–≥—Ä–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—ñ–≤...');
  
  // –°–ø–æ—á–∞—Ç–∫—É –≥–µ–Ω–µ—Ä—É—î–º–æ ARB —Ñ–∞–π–ª–∏
  var result = await Process.run(
    'dart', 
    ['scripts/migrate_texts_to_l10n.dart', '--generate-arb'],
  );
  
  if (result.exitCode != 0) {
    print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó ARB: ${result.stderr}');
  }
  
  // –ü—Ä–æ–±–Ω–∏–π –ø—Ä–æ–≥–æ–Ω –º—ñ–≥—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—ñ–≤
  print('üîç –ü—Ä–æ–±–Ω–∏–π –ø—Ä–æ–≥–æ–Ω –º—ñ–≥—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—ñ–≤...');
  result = await Process.run(
    'dart', 
    ['scripts/migrate_texts_to_l10n.dart', '--dry-run'],
  );
  
  if (result.exitCode != 0) {
    throw '–ü–æ–º–∏–ª–∫–∞ dry-run –º—ñ–≥—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—ñ–≤: ${result.stderr}';
  }
  
  print(result.stdout);
  
  if (!_confirmContinue('–í–∏–∫–æ–Ω–∞—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é —Ç–µ–∫—Å—Ç—ñ–≤?')) return;
  
  // –í–∏–∫–æ–Ω—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—é
  result = await Process.run('dart', ['scripts/migrate_texts_to_l10n.dart']);
  
  if (result.exitCode == 0) {
    print('‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è —Ç–µ–∫—Å—Ç—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    print(result.stdout);
  } else {
    throw '–ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—ñ–≤: ${result.stderr}';
  }
}

Future<void> _runFinalChecks() async {
  print('\nüîç –ö–†–û–ö 5: –§—ñ–Ω–∞–ª—å–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏...');
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó
  print('‚öôÔ∏è  –ì–µ–Ω–µ—Ä—É—é –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó...');
  var result = await Process.run('flutter', ['gen-l10n']);
  if (result.exitCode != 0) {
    print('‚ö†Ô∏è  –ü–æ–º–∏–ª–∫–∞ gen-l10n: ${result.stderr}');
  }
  
  // Flutter analyze
  print('üîç –ê–Ω–∞–ª—ñ–∑—É—é –∫–æ–¥...');
  result = await Process.run('flutter', ['analyze']);
  if (result.exitCode == 0) {
    print('‚úÖ –ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ');
  } else {
    print('‚ö†Ô∏è  –ó–Ω–∞–π–¥–µ–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ –≤ –∫–æ–¥—ñ:');
    print(result.stdout);
  }
  
  // Flutter pub get
  print('üì¶ –û–Ω–æ–≤–ª—é –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ...');
  await Process.run('flutter', ['pub', 'get']);
}

bool _confirmContinue(String message) {
  stdout.write('‚ùì $message (y/N): ');
  final input = stdin.readLineSync()?.toLowerCase();
  return input == 'y' || input == 'yes';
}

void _printSuccessMessage() {
  print('\nüéâ –ú–Ü–ì–†–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–Ü–®–ù–û!');
  print('=' * 50);
  print('‚úÖ –©–æ –∑—Ä–æ–±–ª–µ–Ω–æ:');
  print('   ‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ hardcoded –∑–Ω–∞—á–µ–Ω–Ω—è');
  print('   ‚Ä¢ –ú—ñ–≥—Ä–æ–≤–∞–Ω–æ –∫–æ–ª—å–æ—Ä–∏ –Ω–∞ Theme.of(context)');
  print('   ‚Ä¢ –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—é (l10n)');
  print('   ‚Ä¢ –ú—ñ–≥—Ä–æ–≤–∞–Ω–æ —Ç–µ–∫—Å—Ç–∏ –Ω–∞ AppLocalizations');
  print('   ‚Ä¢ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤');
  
  print('\nüöÄ –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:');
  print('   1. flutter run - –ø–µ—Ä–µ–≤—ñ—Ä —Ä–æ–±–æ—Ç—É –¥–æ–¥–∞—Ç–∫—É');
  print('   2. –ó–∞–ø–æ–≤–Ω–∏ –ø–µ—Ä–µ–∫–ª–∞–¥–∏ –≤ lib/l10n/app_en.arb');
  print('   3. –ü—Ä–æ—Ç–µ—Å—Ç—É–π –∑–º—ñ–Ω—É –º–æ–≤–∏');
  print('   4. git add . && git commit -m "Complete migration"');
  
  print('\nüìÅ –°—Ç–≤–æ—Ä–µ–Ω—ñ —Ñ–∞–π–ª–∏:');
  print('   ‚Ä¢ lib/theme/app_theme.dart - –≤–ª–∞—Å–Ω–∞ —Ç–µ–º–∞');
  print('   ‚Ä¢ lib/l10n/app_uk.arb - —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏');
  print('   ‚Ä¢ lib/l10n/app_en.arb - –∞–Ω–≥–ª—ñ–π—Å—å–∫—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏');
  print('   ‚Ä¢ l10n.yaml - –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –ª–æ–∫–∞–ª—ñ–∑–∞—Ü—ñ—ó');
  print('   ‚Ä¢ analysis_report_*.txt - –∑–≤—ñ—Ç –∞–Ω–∞–ª—ñ–∑—É');
}